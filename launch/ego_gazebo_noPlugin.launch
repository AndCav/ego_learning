<?xml version="1.0"?>
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="use_rviz" default="true" />
  <arg name="paused" default="true" />
  <arg name="gui" default="true" />
  <arg name="recording" default="false" />
  <arg name="verbose" value="true" />
  <arg name="inv_dyn" default="false" />
  <arg name="AlterEgo_version" default="2" />
  <arg name="use_sim_time" default="false" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="physics" default="ode" />

  <arg name="world_name" default="empty_normalSpeed" />
  <arg name="control_type" default="effort" />
  <arg name="number" default="1" />
  <arg name="camera" default="0" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="physics" value="$(arg physics)" />
    <arg name="world_name" value="$(find ego_learning)/worlds/$(arg world_name).world" />
  </include>
  <!-- URDF into the ROS Parameter Server with the compliant actuator-->

  <rosparam command="load" file="$(find ego_description)/config/compliant_config.yaml" />


  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model ego_robot -param robot_description -x -0.0 -y 0.0 -z 0.13 -J wheel_L 0.0 -J wheel_R 0.0" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ego_description)/urdf/ego$(arg AlterEgo_version)_robot_gazebo_learning.urdf.xacro'" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find ego_learning)/config/ego_motors.yaml" command="load" />

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/ego" args="joint_state_controller left_wheel_controller right_wheel_controller ">
    <!-- <param name="" -->
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen"></node>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true">
    <!-- <param name="rate" value="1000" /> -->
  </node>
  <!-- TODO: We need a launch file to launch the robot controllers -->


  <!-- Testing LQR Controller -->
  <param name="AlterEgoVersion" value="$(arg AlterEgo_version)" />
  <node pkg="lqr_controller" name="lqr_control" type="lqr_controller" output="screen" />
  <!-- <node pkg="arms_inv_kin_controller" name="inv_kin_gravity_comp" type="inv_kin_gravity_comp_node" output="screen" /> -->
  <node pkg="lqr_controller" name="pitch_loop" type="pitch_loop" output="screen" />


</launch>